# Написать функцию sameness_index, которая возвращает индекс N, где сумма целых чисел слева от N
# равна сумме целых чисел справа от N. Если нет индекса, который бы это сделал, верните -1.
#
# Пример:
# [1, 2, 3, 4, 3, 2, 1]  => 3 -> 1 + 2 + 3 = 3 + 2 + 1


import traceback


def sameness_index(arr):
    for i in range(len(arr)):  # Перебираем все индексы массива
        s1 = 0  # Переменные, которые обозначают сумму справа и слева
        s2 = 0
        for j in range(i):  # Складываем c начала списка(массива), до индекса i (сам i-ый элемент не складываем)
            s1 += arr[j]
        for k in range(i + 1, len(
                arr)):  # Аналогично с правой частью, i + 1, т.к. range включает первое значение, а оно нам не нужно
            s2 += arr[k]
        if s1 == s2:  # Если суммы равны, то возращаем текущий индекс и соотвественно выходим из функции
            return i
    return -1  # Если цикло прошёлся по всем индексам, но нужного не нашёл, программа идёи дальше и возращает -1


# Тесты
try:
    assert sameness_index([1, 2, 3, 4, 5, 6]) == -1
    assert sameness_index([20, 10, 30, 10, 10, 15, 35]) == 3
    assert sameness_index([20, 10, -80, 10, 10, 15, 35]) == 0
    assert sameness_index([10, -80, 10, 10, 15, 35, 20]) == 6
except AssertionError:
    print("TEST ERROR")
    traceback.print_exc()
else:
    print("TEST PASSED")
